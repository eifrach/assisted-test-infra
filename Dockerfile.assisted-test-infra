# FROM quay.io/assisted-installer-ops/base-python:3.12 AS base
FROM quay.io/centos/centos:stream9 AS base

WORKDIR /home/assisted-test-infra

ENV GOPATH=/opt/app-root/src/go
ENV GOCACHE=/opt/app-root/src/.cache/go-build
ENV GOROOT=/usr/lib/golang
ENV TOOLS=/tools/
ENV PATH="$TOOLS:$GOROOT/bin:$GOPATH/bin:$PATH"

# Setup container
RUN  <<EOR
  cat <<EOF >>  /etc/dnf/dnf.conf
fastestmirror=1
max_parallel_downloads=10
EOF

  chmod g+w /etc/passwd 
  echo 'echo default:x:$(id -u):$(id -g):Default Application User:/alabama:/sbin/nologin\ >> /etc/passwd' > /usr/local/bin/fix_uid.sh 
  chmod g+rwx /usr/local/bin/fix_uid.sh
  mkdir -p $TOOLS $GOROOT $GOPATH $GOCACHE
EOR


FROM registry.access.redhat.com/ubi9/go-toolset:1.21 AS download

ARG TARGETPLATFORM
ENV OPTS="--retry 2 --connect-timeout 30 -sL"

WORKDIR /opt/downloads

COPY --from=quay.io/ocp-splat/govc:v0.29.0 /govc /usr/local/bin/

RUN PLATFORM=$(echo ${TARGETPLATFORM} | cut -d"/" -f2) && echo $PLATFORM && \
    mkdir -p usr/local/bin tools && \
    curl ${OPTS} "https://releases.hashicorp.com/packer/1.10.1/packer_1.10.1_linux_$PLATFORM.zip"     | bsdtar -C usr/local/bin/ -xvf-  packer && \
    GOBIN=/opt/downloads/usr/local/bin go install github.com/hashicorp/terraform@v1.7.5 && \
    curl ${OPTS} "https://github.com/containers/podman/releases/download/v3.4.4/podman-remote-static.tar.gz" | tar xvzO > tools/podman-remote3 && \
    curl ${OPTS} "https://github.com/containers/podman/releases/download/v4.1.1/podman-remote-static.tar.gz" | tar xvzO > tools/podman-remote4 && \
    chmod +x tools/* usr/local/bin/* 

FROM base AS packages

COPY --from=download $GOROOT $GOROOT
COPY --from=download /opt/downloads /

RUN dnf -y install --enablerepo=crb --setopt="install_weak_deps=False" \
  make gcc unzip curl-minimal git httpd-tools jq \
  nss_wrapper libvirt-client guestfs-tools libvirt-devel libguestfs-tools \
  libxslt xorriso iptables-nft python3.12-pip python3.12-devel && \
  dnf clean all 


RUN ln -sf /usr/bin/python3.12 /usr/bin/python3 && \
    ln -sf /usr/bin/python3.12 /usr/bin/python && \
    ln -sf pip3.12 /usr/bin/pip3 && \
    ln -sf pip3.12 /usr/bin/pip 
    
RUN git config --system --add safe.directory '*'

COPY requirements.txt requirements-dev.txt /tmp

RUN pip3 install --no-cache-dir --upgrade pip && \
    pip3 install --no-cache-dir -U -r /tmp/requirements.txt -r /tmp/requirements-dev.txt

FROM packages AS final

WORKDIR /home/assisted-test-infra







